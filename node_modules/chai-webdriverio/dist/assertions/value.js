'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = value;

var _elementExists = require('../util/element-exists');

var _elementExists2 = _interopRequireDefault(_elementExists);

var _defaultConfig = require('../util/default-config');

var _defaultConfig2 = _interopRequireDefault(_defaultConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function value(client, chai, utils, options) {
    var config = (0, _defaultConfig2.default)(options);
    chai.Assertion.addMethod('value', function (expected) {
        var selector = utils.flag(this, 'object');
        var immediately = utils.flag(this, 'immediately');

        if (!immediately) {
            (0, _elementExists2.default)(client, selector, config.defaultWait);
        }

        var elementValue = client.getValue(selector);
        var valueArray = elementValue instanceof Array ? elementValue : [elementValue];

        var elementValueAsExpected;
        if (typeof expected == "string") {
            elementValueAsExpected = valueArray.some(function (value) {
                return value === expected;
            });
        } else {
            elementValueAsExpected = valueArray.some(function (value) {
                return value.match(expected);
            });
        }

        this.assert(elementValueAsExpected, 'Expected an element matching <' + selector + '> to contain value "' + expected + '", but only found these values: ' + valueArray, 'Expected an element matching <' + selector + '> not to contain value "' + expected + '", but found these values: ' + valueArray);
    });
}